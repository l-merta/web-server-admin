name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch: # Add this line to enable manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install cloudflared and sshpass
      run: |
        sudo apt-get update && sudo apt-get install -y curl sshpass && \
        curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm.deb -o cloudflared.deb && \
        sudo dpkg -i cloudflared.deb && \
        sudo chmod +x cloudflared && \
        sudo rm cloudflared.deb

    - name: Create .ssh directory
      run: |
        mkdir -p ~/.ssh

    - name: Configure SSH
      run: |
        echo "Host mertalukas
          HostName ssh.mertalukas.cz
          User root
          ProxyCommand cloudflared access ssh --hostname %h --service-token-id ${{ secrets.CLOUDFLARE_SERVICE_TOKEN_ID }} --service-token-secret ${{ secrets.CLOUDFLARE_SERVICE_TOKEN_SECRET }}
        " >> ~/.ssh/config

    - name: Export Environment Variables
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        echo DB_HOST=$DB_HOST >> ./server/.env
        echo DB_USER=$DB_USER >> ./server/.env
        echo DB_PASSWORD=$DB_PASSWORD >> ./server/.env
        echo DB_NAME=$DB_NAME >> ./server/.env

    - name: Set up Docker Buildx
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --use
        docker buildx inspect --bootstrap

    - name: Build Docker image
      run: |
        docker login -u lmerta -p ${{ secrets.DOCKER_PASSWORD }}
        docker buildx build --platform linux/arm/v7 -t lmerta/tws-kahoot:latest --push .

    - name: Deploy Docker image to Raspberry Pi
      env:
        SSHPASS: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -e ssh -o StrictHostKeyChecking=no root@mertalukas "
          docker stop web-server-admin-cont || true && docker rm web-server-admin-cont || true
          docker pull lmerta/web-server-admin:latest
          docker run -dp 6010:5200 --name web-server-admin-cont --restart unless-stopped lmerta/web-server-admin:latest
        "